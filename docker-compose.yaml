version: '3.9'
services:
  frontend:
    build: ./frontend
    restart: on-failure
    ports:
      - "3000:3000"
    networks:
      - backend-internal
    depends_on:
      - flask
    volumes:
      - ./frontend:/frontend

  flask:
    build: ./backend
    restart: on-failure
    stop_signal: SIGINT
    volumes:
      - ./backend:/backend
    ports:
      - "5000:5000"
    networks:
      - backend-internal
    depends_on:
      - phone-db
    command: gunicorn -b 0.0.0.0:5000 app:app

  phone-db:
    image: postgres:alpine
    ports:
      - "5555:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    networks:
      - backend-internal
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 5s
      retries: 5
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./db/data/MNP.csv:/MNP.csv
      - ./db/data/Numbers-Plan-9.csv:/Numbers-Plan-9.csv

#      - ./db/postgres-data:/var/lib/postgresql/data

networks:
  backend-internal:
    driver: bridge
    external: true